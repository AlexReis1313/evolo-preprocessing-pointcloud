In file included from [01m[K/usr/local/include/small_gicp/pcl/pcl_registration_impl.hpp:17[m[K,
                 from [01m[K/usr/local/include/small_gicp/pcl/pcl_registration.hpp:116[m[K,
                 from [01m[K/home/alex/thesis_ws/src/pointcloud_to_laserscan/include/pointcloud_to_laserscan/vgicp_registration.hpp:6[m[K,
                 from [01m[K/home/alex/thesis_ws/src/pointcloud_to_laserscan/src/vgicp_registration.cpp:4[m[K:
[01m[K/usr/local/include/small_gicp/registration/reduction_omp.hpp:10:2:[m[K [01;35m[Kwarning: [m[K#warning "OpenMP is not available. Parallel reduction will be disabled." [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wcpp-Wcpp]8;;[m[K]
   10 | #[01;35m[Kwarning[m[K "OpenMP is not available. Parallel reduction will be disabled."
      |  [01;35m[K^~~~~~~[m[K
In file included from [01m[K/usr/local/include/small_gicp/pcl/pcl_registration_impl.hpp:17[m[K,
                 from [01m[K/usr/local/include/small_gicp/pcl/pcl_registration.hpp:116[m[K,
                 from [01m[K/home/alex/thesis_ws/src/pointcloud_to_laserscan/include/pointcloud_to_laserscan/vgicp_registration.hpp:6[m[K,
                 from [01m[K/home/alex/thesis_ws/src/pointcloud_to_laserscan/include/pointcloud_to_laserscan/pointcloud_to_laserscan_node.hpp:62[m[K,
                 from [01m[K/home/alex/thesis_ws/src/pointcloud_to_laserscan/src/pointcloud_to_laserscan_node.cpp:41[m[K:
[01m[K/usr/local/include/small_gicp/registration/reduction_omp.hpp:10:2:[m[K [01;35m[Kwarning: [m[K#warning "OpenMP is not available. Parallel reduction will be disabled." [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wcpp-Wcpp]8;;[m[K]
   10 | #[01;35m[Kwarning[m[K "OpenMP is not available. Parallel reduction will be disabled."
      |  [01;35m[K^~~~~~~[m[K
[01m[K/home/alex/thesis_ws/src/pointcloud_to_laserscan/src/vgicp_registration.cpp:[m[K In member function â€˜[01m[Kvoid vgicpRegistrationClass::setLastCloud(const pcl::PointCloud<pcl::PointXYZ>&)[m[Kâ€™:
[01m[K/home/alex/thesis_ws/src/pointcloud_to_laserscan/src/vgicp_registration.cpp:23:19:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kpcl::PointCloud<pcl::PointXYZ>[m[Kâ€™ and â€˜[01m[Kpcl::PointCloud<pcl::PointXYZ>::Ptr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™})
   23 |     last_cloud_ = [01;31m[Kdownsampled_last_cloud[m[K;
      |                   [01;31m[K^~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/local/include/small_gicp/pcl/pcl_point_traits.hpp:6[m[K,
                 from [01m[K/home/alex/thesis_ws/src/pointcloud_to_laserscan/include/pointcloud_to_laserscan/vgicp_registration.hpp:5[m[K,
                 from [01m[K/home/alex/thesis_ws/src/pointcloud_to_laserscan/src/vgicp_registration.cpp:4[m[K:
[01m[K/usr/include/pcl-1.12/pcl/point_cloud.h:172:21:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kpcl::PointCloud<pcl::PointXYZ>& pcl::PointCloud<pcl::PointXYZ>::operator=(const pcl::PointCloud<pcl::PointXYZ>&)[m[Kâ€™
  172 |   class PCL_EXPORTS [01;36m[KPointCloud[m[K
      |                     [01;36m[K^~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.12/pcl/point_cloud.h:172:21:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kpcl::PointCloud<pcl::PointXYZ>::Ptr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™} to â€˜[01m[Kconst pcl::PointCloud<pcl::PointXYZ>&[m[Kâ€™
[01m[K/usr/include/pcl-1.12/pcl/point_cloud.h:172:21:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kpcl::PointCloud<pcl::PointXYZ>& pcl::PointCloud<pcl::PointXYZ>::operator=(pcl::PointCloud<pcl::PointXYZ>&&)[m[Kâ€™
[01m[K/usr/include/pcl-1.12/pcl/point_cloud.h:172:21:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kpcl::PointCloud<pcl::PointXYZ>::Ptr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™} to â€˜[01m[Kpcl::PointCloud<pcl::PointXYZ>&&[m[Kâ€™
[01m[K/home/alex/thesis_ws/src/pointcloud_to_laserscan/src/vgicp_registration.cpp:25:25:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kpcl::PointCloud<pcl::PointXYZ>[m[Kâ€™ to â€˜[01m[Kconst PointCloudSourceConstPtr&[m[Kâ€™ {aka â€˜[01m[Kconst std::shared_ptr<const pcl::PointCloud<pcl::PointXYZ> >&[m[Kâ€™}
   25 |     reg_.setInputSource([01;31m[Klast_cloud_[m[K);
      |                         [01;31m[K^~~~~~~~~~~[m[K
      |                         [01;31m[K|[m[K
      |                         [01;31m[Kpcl::PointCloud<pcl::PointXYZ>[m[K
In file included from [01m[K/usr/local/include/small_gicp/pcl/pcl_registration.hpp:116[m[K,
                 from [01m[K/home/alex/thesis_ws/src/pointcloud_to_laserscan/include/pointcloud_to_laserscan/vgicp_registration.hpp:6[m[K,
                 from [01m[K/home/alex/thesis_ws/src/pointcloud_to_laserscan/src/vgicp_registration.cpp:4[m[K:
[01m[K/usr/local/include/small_gicp/pcl/pcl_registration_impl.hpp:41:96:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid small_gicp::RegistrationPCL<PointSource, PointTarget>::setInputSource(const PointCloudSourceConstPtr&) [with PointSource = pcl::PointXYZ; PointTarget = pcl::PointXYZ; small_gicp::RegistrationPCL<PointSource, PointTarget>::PointCloudSourceConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZ> >][m[Kâ€™
   41 | void RegistrationPCL<PointSource, PointTarget>::setInputSource([01;36m[Kconst PointCloudSourceConstPtr& cloud[m[K) {
      |                                                                [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~[m[K
[01m[K/home/alex/thesis_ws/src/pointcloud_to_laserscan/src/vgicp_registration.cpp:[m[K In member function â€˜[01m[Kvoid vgicpRegistrationClass::setNewCloud(const pcl::PointCloud<pcl::PointXYZ>&)[m[Kâ€™:
[01m[K/home/alex/thesis_ws/src/pointcloud_to_laserscan/src/vgicp_registration.cpp:31:18:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Kpcl::PointCloud<pcl::PointXYZ>[m[Kâ€™ and â€˜[01m[Kpcl::PointCloud<pcl::PointXYZ>::Ptr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™})
   31 |     new_cloud_ = [01;31m[Kdownsampled_new_cloud[m[K;
      |                  [01;31m[K^~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/local/include/small_gicp/pcl/pcl_point_traits.hpp:6[m[K,
                 from [01m[K/home/alex/thesis_ws/src/pointcloud_to_laserscan/include/pointcloud_to_laserscan/vgicp_registration.hpp:5[m[K,
                 from [01m[K/home/alex/thesis_ws/src/pointcloud_to_laserscan/src/vgicp_registration.cpp:4[m[K:
[01m[K/usr/include/pcl-1.12/pcl/point_cloud.h:172:21:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kpcl::PointCloud<pcl::PointXYZ>& pcl::PointCloud<pcl::PointXYZ>::operator=(const pcl::PointCloud<pcl::PointXYZ>&)[m[Kâ€™
  172 |   class PCL_EXPORTS [01;36m[KPointCloud[m[K
      |                     [01;36m[K^~~~~~~~~~[m[K
[01m[K/usr/include/pcl-1.12/pcl/point_cloud.h:172:21:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kpcl::PointCloud<pcl::PointXYZ>::Ptr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™} to â€˜[01m[Kconst pcl::PointCloud<pcl::PointXYZ>&[m[Kâ€™
[01m[K/usr/include/pcl-1.12/pcl/point_cloud.h:172:21:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kpcl::PointCloud<pcl::PointXYZ>& pcl::PointCloud<pcl::PointXYZ>::operator=(pcl::PointCloud<pcl::PointXYZ>&&)[m[Kâ€™
[01m[K/usr/include/pcl-1.12/pcl/point_cloud.h:172:21:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kpcl::PointCloud<pcl::PointXYZ>::Ptr[m[Kâ€™ {aka â€˜[01m[Kstd::shared_ptr<pcl::PointCloud<pcl::PointXYZ> >[m[Kâ€™} to â€˜[01m[Kpcl::PointCloud<pcl::PointXYZ>&&[m[Kâ€™
[01m[K/home/alex/thesis_ws/src/pointcloud_to_laserscan/src/vgicp_registration.cpp:33:25:[m[K [01;31m[Kerror: [m[Kcannot convert â€˜[01m[Kpcl::PointCloud<pcl::PointXYZ>[m[Kâ€™ to â€˜[01m[Kconst PointCloudTargetConstPtr&[m[Kâ€™ {aka â€˜[01m[Kconst std::shared_ptr<const pcl::PointCloud<pcl::PointXYZ> >&[m[Kâ€™}
   33 |     reg_.setInputTarget([01;31m[Knew_cloud_[m[K);
      |                         [01;31m[K^~~~~~~~~~[m[K
      |                         [01;31m[K|[m[K
      |                         [01;31m[Kpcl::PointCloud<pcl::PointXYZ>[m[K
In file included from [01m[K/usr/local/include/small_gicp/pcl/pcl_registration.hpp:116[m[K,
                 from [01m[K/home/alex/thesis_ws/src/pointcloud_to_laserscan/include/pointcloud_to_laserscan/vgicp_registration.hpp:6[m[K,
                 from [01m[K/home/alex/thesis_ws/src/pointcloud_to_laserscan/src/vgicp_registration.cpp:4[m[K:
[01m[K/usr/local/include/small_gicp/pcl/pcl_registration_impl.hpp:53:96:[m[K [01;36m[Knote: [m[K  initializing argument 1 of â€˜[01m[Kvoid small_gicp::RegistrationPCL<PointSource, PointTarget>::setInputTarget(const PointCloudTargetConstPtr&) [with PointSource = pcl::PointXYZ; PointTarget = pcl::PointXYZ; small_gicp::RegistrationPCL<PointSource, PointTarget>::PointCloudTargetConstPtr = std::shared_ptr<const pcl::PointCloud<pcl::PointXYZ> >][m[Kâ€™
   53 | void RegistrationPCL<PointSource, PointTarget>::setInputTarget([01;36m[Kconst PointCloudTargetConstPtr& cloud[m[K) {
      |                                                                [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~[m[K
[01m[K/home/alex/thesis_ws/src/pointcloud_to_laserscan/src/vgicp_registration.cpp:[m[K In member function â€˜[01m[Kpcl::PointCloud<pcl::PointXYZ> vgicpRegistrationClass::getNewTransformedCloud() const[m[Kâ€™:
[01m[K/home/alex/thesis_ws/src/pointcloud_to_laserscan/src/vgicp_registration.cpp:38:38:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator*[m[Kâ€™ (operand type is â€˜[01m[Kconst pcl::PointCloud<pcl::PointXYZ>[m[Kâ€™)
   38 |         pcl_ros::transformPointCloud([01;31m[K*new_cloud_[m[K, *new_cloud_transformed_, ICP_output_transform_);
      |                                      [01;31m[K^~~~~~~~~~~[m[K
[01m[K/home/alex/thesis_ws/src/pointcloud_to_laserscan/src/vgicp_registration.cpp:38:51:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator*[m[Kâ€™ (operand type is â€˜[01m[Kconst pcl::PointCloud<pcl::PointXYZ>[m[Kâ€™)
   38 |         pcl_ros::transformPointCloud(*new_cloud_, [01;31m[K*new_cloud_transformed_[m[K, ICP_output_transform_);
      |                                                   [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/alex/thesis_ws/src/pointcloud_to_laserscan/src/vgicp_registration.cpp:[m[K In member function â€˜[01m[Kvoid vgicpRegistrationClass::computeRegistration()[m[Kâ€™:
[01m[K/home/alex/thesis_ws/src/pointcloud_to_laserscan/src/vgicp_registration.cpp:49:32:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kclass pcl::PointCloud<pcl::PointXYZ>[m[Kâ€™ has no member named â€˜[01m[Kreset[m[Kâ€™
   49 |         new_cloud_transformed_.[01;31m[Kreset[m[K(new pcl::PointCloud<pcl::PointXYZ>);
      |                                [01;31m[K^~~~~[m[K
[01m[K/home/alex/thesis_ws/src/pointcloud_to_laserscan/src/vgicp_registration.cpp:51:20:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator*[m[Kâ€™ (operand type is â€˜[01m[Kpcl::PointCloud<pcl::PointXYZ>[m[Kâ€™)
   51 |         reg_.align([01;31m[K*new_cloud_transformed_[m[K);
      |                    [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/alex/thesis_ws/src/pointcloud_to_laserscan/src/vgicp_registration.cpp:55:38:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KeigenToTransform[m[Kâ€™ is not a member of â€˜[01m[Ktf2[m[Kâ€™; did you mean â€˜[01m[KdoTransform[m[Kâ€™?
   55 |         ICP_output_transform_ = tf2::[01;31m[KeigenToTransform[m[K(transform_matrix);
      |                                      [01;31m[K^~~~~~~~~~~~~~~~[m[K
      |                                      [32m[KdoTransform[m[K
gmake[2]: *** [CMakeFiles/pointcloud_to_laserscan.dir/build.make:90: CMakeFiles/pointcloud_to_laserscan.dir/src/vgicp_registration.cpp.o] Error 1
gmake[2]: *** Waiting for unfinished jobs....
gmake[1]: *** [CMakeFiles/Makefile2:167: CMakeFiles/pointcloud_to_laserscan.dir/all] Error 2
gmake: *** [Makefile:146: all] Error 2
